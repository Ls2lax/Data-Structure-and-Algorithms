/* 
 Author Laxman Sharma
 BFS traversal
 input format
 V --> no. of vertices
 E --> no. of edges
 next E line contains
 u, v there is edge between u to v
 edges are undirected.
*/

#include<bits/stdc++.h>
using namespace std;
class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    vector<int> bfsOfGraph(int V, vector<int> adj[]) {
        vector<int>ans;
        vector<bool>vis(V,false);
        queue<int>q;
        q.push(0);
        while(!q.empty()) {
            int s = q.front();
            q.pop();
            if(vis[s]) {
                continue;
            }
            vis[s] = true;
            ans.push_back(s);
            for(int i=0;i<adj[s].size();i++) {
                q.push(adj[s][i]);
            }
        }
        return ans;
    }
};

int main() {
	int V, E;
	cin>>V>>E;
	vector<int> adj[V];
	for(int i=0;i<E;i++) {
		int u,v;
		cin>>u>>v;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}

	Solution obj;
	vector<int> ans = obj.bfsOfGraph(V, adj);
	for(int val: ans) {
		cout<<val<<" ";
	}
}
